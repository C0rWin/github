<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Short notes]]></title>
  <link href="http://pensieve.info/atom.xml" rel="self"/>
  <link href="http://pensieve.info/"/>
  <updated>2013-10-03T16:07:11+03:00</updated>
  <id>http://pensieve.info/</id>
  <author>
    <name><![CDATA[C0rWin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Israel Global Day of Code Retreat 2013.]]></title>
    <link href="http://pensieve.info/blog/2013/09/30/israel-global-day-of-code-retreat/"/>
    <updated>2013-09-30T00:28:00+03:00</updated>
    <id>http://pensieve.info/blog/2013/09/30/israel-global-day-of-code-retreat</id>
    <content type="html"><![CDATA[<p>During day-to-day, developers facing with deadlines, different project commitments, bug fixing, maitenance and support. There is always not enough time for code improvements and refactoring. I wish I&rsquo;ll have some free day I could easily practice and improve my development skills without having all this duties on head.</p>

<p>So here it comes again:</p>

<blockquote><p>On 14th of December there will be <a href="http://coderetreat.org/">Global Day of Code Retreat</a> event, which this year is hosted by <a href="http://coderetreat.org/events/event/listByLocation?location=eBay+Israel+Innovation+Center%27s+Offices">Ebay Israel Innovation Center</a>. You can find more on <a href="http://coderetreat.org/about">about</a> page and take a look on following video:</p></blockquote>

<p> <div class="embed-video-container"><iframe src="http://player.vimeo.com/video/18955165 "></iframe></div></p>

<p><strong>Do not miss, highly recommended.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Putting all together setup, Hadoop cluster on VM with Puppet.]]></title>
    <link href="http://pensieve.info/blog/2013/09/30/putting-all-together-setup-hadoop-cluster-on-vm-with-puppet/"/>
    <updated>2013-09-30T00:14:00+03:00</updated>
    <id>http://pensieve.info/blog/2013/09/30/putting-all-together-setup-hadoop-cluster-on-vm-with-puppet</id>
    <content type="html"><![CDATA[<p>In my two previous blog post I&rsquo;ve explained:</p>

<ol>
<li><a href="blog/2013/09/21/setup-hadoop-cluster/">Setup Hadoop cluster</a> &ndash; manual configuration on virtual machines which needed to setup Hadoop cluster.</li>
<li><a href="blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet">Install Java on VM using vagrant and puppet</a> &ndash; I&rsquo;ve started to explain how to leverage vagrant and puppet in order to have Java installed in virtual machine.</li>
</ol>


<p>Now in this post I&rsquo;ll try to explain how-to setup hadoop cluster on virtual environment using vagrant and puppet scripts, so all actions in my first post could be easily automated.</p>

<p> <!-- more --></p>

<p> I&rsquo;m going to use my first two posts as a reference and assume you have downloaded all files needed, moreover you already have puppet module script for java install and configuration.</p>

<p>Start as usual:</p>

<h3>1. Create module folders:</h3>

<figure class='code'><figcaption><span>Terminal Widow </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p modules/hadoop/{files,manifests}</span></code></pre></td></tr></table></div></figure>


<h3>2. Copy hadoop files into module folder:</h3>

<p>As I said I&rsquo;m going to use files from previous <a href="blog/2013/09/21/setup-hadoop-cluster/">post</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp hadoop-1.2.1.tar.gz modules/hadoop/files/</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Maven on VM with Puppet]]></title>
    <link href="http://pensieve.info/blog/2013/09/22/install-maven-on-vm-with-puppet/"/>
    <updated>2013-09-22T23:26:00+03:00</updated>
    <id>http://pensieve.info/blog/2013/09/22/install-maven-on-vm-with-puppet</id>
    <content type="html"><![CDATA[<p>In my <a href="blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet">previous</a> post I&rsquo;ve explained how to setup Java on virtual machine using <a href="http://puppetlabs.com/">Puppet</a>. Now it&rsquo;s a time to make it for maven, basically most of the steps are the same.</p>

<!-- more -->


<h3>1. Download maven archive.</h3>

<p>Visit Apache <a href="http://maven.apache.org/download.cgi">Maven site</a> and download recent binary tar gz archived maven version.</p>

<h3>2. Create maven puppet module folders.</h3>

<p>Execute following terminal command in your working directory:</p>

<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p modules/maven/{files,manifests}</span></code></pre></td></tr></table></div></figure>


<p>And copy downloaded maven binaries archive (apache-maven-3.1.0-bin.tar.gz in my case) into files sub-folder:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp apache-maven-3.1.0-bin.tar.gz modules/maven/files/</span></code></pre></td></tr></table></div></figure>


<h3>3. Write down configuration script.</h3>

<p>Create <em>init.pp</em> files inside manifests folder</p>

<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>touch modules/maven/manifests/init.pp</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s put there following implementation:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="n">maven</span> <span class="p">(</span>
</span><span class='line'>  <span class="vg">$maven_home</span> <span class="o">=</span> <span class="s2">&quot;/usr/lib/maven&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="vg">$maven_archive</span> <span class="o">=</span> <span class="s2">&quot;apache-maven-3.1.0-bin.tar.gz&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="vg">$maven_folder</span> <span class="o">=</span> <span class="s2">&quot;apache-maven-3.1.0&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="no">Exec</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">path</span> <span class="o">=&gt;</span> <span class="o">[</span> <span class="s2">&quot;/usr/bin&quot;</span><span class="p">,</span> <span class="s2">&quot;/bin&quot;</span><span class="p">,</span> <span class="s2">&quot;/usr/sbin&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">file</span> <span class="p">{</span> <span class="s2">&quot;/tmp/${maven_archive}&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="k">ensure</span> <span class="o">=&gt;</span> <span class="n">present</span><span class="p">,</span>
</span><span class='line'>      <span class="n">source</span> <span class="o">=&gt;</span> <span class="s2">&quot;puppet:///modules/maven/${maven_archive}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">owner</span> <span class="o">=&gt;</span> <span class="n">vagrant</span><span class="p">,</span>
</span><span class='line'>      <span class="n">mode</span> <span class="o">=&gt;</span> <span class="mi">755</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nb">exec</span> <span class="p">{</span> <span class="s2">&quot;extract maven&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;tar xfv ${maven_archive}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">cwd</span> <span class="o">=&gt;</span> <span class="s2">&quot;/tmp&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">creates</span> <span class="o">=&gt;</span> <span class="s2">&quot;${maven_home}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">File</span><span class="o">[</span><span class="s2">&quot;/tmp/${maven_archive}&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">exec</span> <span class="p">{</span> <span class="s2">&quot;move maven&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;mv ${maven_folder} ${maven_home}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">creates</span> <span class="o">=&gt;</span> <span class="s2">&quot;${maven_home}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">cwd</span> <span class="o">=&gt;</span> <span class="s2">&quot;/tmp&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s2">&quot;extract maven&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">file</span> <span class="p">{</span> <span class="s2">&quot;/etc/profile.d/maven.sh&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=&gt;</span>   <span class="s2">&quot;export MAVEN_HOME=${maven_home}</span>
</span><span class='line'><span class="s2">                   export M2=\$MAVEN_HOME/bin</span>
</span><span class='line'><span class="s2">                   export PATH=\$PATH:\$M2</span>
</span><span class='line'><span class="s2">                   export MAVEN_OPTS=</span><span class="se">\&quot;</span><span class="s2">-Xmx512m -Xms512m</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. Put everything together.</h3>

<p>I&rsquo;ll continue to use Vagrantfile and manifest from <a href="blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet">previous</a> post, therefore in order to test my new puppet script for maven install I&rsquo;ll just use already create test_vm.pp and add following lines:</p>

<figure class='code'><figcaption><span>Terminal WIndow </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "include maven" >> manifests/test_vm.pp</span></code></pre></td></tr></table></div></figure>


<h3>5. Reload VM (or start).</h3>

<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant reload test_vm</span></code></pre></td></tr></table></div></figure>


<h3>6. Enjoy!</h3>

<p> In my next post I&rsquo;ll finilize and put together current result with script from my <a href="blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet">previous</a> post in order to implement scripts which will enable to setup Hadoop cluster on VM. Therefore all I&rsquo;ve described in my <a href="blog/2013/09/21/setup-hadoop-cluster/">first</a> post could be easily automated.</p>

<p>PS. Here I&rsquo;ve changed the puppet script same way as in my <a href="blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet">previous</a> post, to support parametrized class definition to support customization.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Java on VM using Vagrant and Puppet]]></title>
    <link href="http://pensieve.info/blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet/"/>
    <updated>2013-09-21T23:25:00+03:00</updated>
    <id>http://pensieve.info/blog/2013/09/21/install-java-on-vm-using-vagrant-and-puppet</id>
    <content type="html"><![CDATA[<p>As part of my work I need to be able to test different Java Web applications. I need to be able to run some tests on more then only single computer, hence I need rapid way of setting up several Linux based computers/servers with configured Java running, usually I&rsquo;m using Ubuntu based destributives.</p>

<p>Therefore I&rsquo;ve choose the winning couple of <a href="http://puppetlabs.com/">Puppet</a> and <a href="http://www.vagrantup.com/">Vagrant</a>. You&rsquo;re more than welcome to read about these tools and I&rsquo;ll skip the installation guide for them, since google has pleanty of different tutorials explaning how to do it for different platform, so you just need to pick the right one for you.</p>

<!-- more -->


<p>I&rsquo;m going to show how to leverage <a href="http://puppetlabs.com/">Puppet</a> modules architecture, how to implement new module which will be capable to install and configure Java for new VM machine. To learn more about modules in <a href="http://puppetlabs.com/">Puppet</a>, please take a look on <a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_fundamentals.html">modules fundamentals</a> article on <a href="http://puppetlabs.com/">Puppet</a> labs site.</p>

<h3>1. Download Java.</h3>

<p>Very first step which has to be done, is to download tar gz archive of Java JDK or (JRE), from Oracle official <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">site</a>. By the time I&rsquo;m writting this post current lates JDK tar gz is <em>jdk-7u40-linux-i586.tar.gz</em>.</p>

<h3>2. Create new Puppet module.</h3>

<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p modules/java/{files,manifests}</span></code></pre></td></tr></table></div></figure>


<h3>3. Copy Java JDK into module folders.</h3>

<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp jdk-7u40-linux-i586.tar.gz modules/java/files/</span></code></pre></td></tr></table></div></figure>


<h3>4. Write module implementation.</h3>

<ul>
<li>Create <em>init.pp</em> file within <strong>manifests</strong> folder</li>
</ul>


<figure class='code'><figcaption><span>Terminal WIndow </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>touch modules/java/manifests/init.pp</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Now we need to write down following content:</li>
</ul>


<figure class='code'><figcaption><span>init.pp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="n">java</span><span class="p">(</span>
</span><span class='line'>    <span class="vg">$java_archive</span> <span class="o">=</span> <span class="s2">&quot;jdk-7u40-linux-x64.tar.gz&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="vg">$java_home</span> <span class="o">=</span> <span class="s2">&quot;/usr/lib/jvm/jdk1.7.0_40/&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="vg">$java_folder</span> <span class="o">=</span> <span class="s2">&quot;jdk1.7.0_40&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Exec</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">path</span> <span class="o">=&gt;</span> <span class="o">[</span> <span class="s2">&quot;/usr/bin&quot;</span><span class="p">,</span> <span class="s2">&quot;/bin&quot;</span><span class="p">,</span> <span class="s2">&quot;/usr/sbin&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">file</span> <span class="p">{</span> <span class="s2">&quot;/tmp/${java_archive}&quot;</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">ensure</span> <span class="o">=&gt;</span> <span class="s2">&quot;present&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">source</span> <span class="o">=&gt;</span> <span class="s2">&quot;puppet:///modules/java/${java_archive}&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">owner</span>  <span class="o">=&gt;</span> <span class="n">vagrant</span><span class="p">,</span>
</span><span class='line'>        <span class="n">mode</span>   <span class="o">=&gt;</span> <span class="mi">755</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span> <span class="s1">&#39;extract jdk&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">cwd</span> <span class="o">=&gt;</span> <span class="s1">&#39;/tmp&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;tar xfv ${java_archive}&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">creates</span> <span class="o">=&gt;</span> <span class="vg">$java_home</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">File</span><span class="o">[</span><span class="s2">&quot;/tmp/${java_archive}&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">file</span> <span class="p">{</span> <span class="s1">&#39;/usr/lib/jvm&#39;</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">ensure</span> <span class="o">=&gt;</span> <span class="n">directory</span><span class="p">,</span>
</span><span class='line'>        <span class="n">owner</span> <span class="o">=&gt;</span> <span class="n">vagrant</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s1">&#39;extract jdk&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span> <span class="s1">&#39;move jdk&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">cwd</span> <span class="o">=&gt;</span> <span class="s1">&#39;/tmp&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">creates</span> <span class="o">=&gt;</span> <span class="vg">$java_home</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">File</span><span class="o">[</span><span class="s1">&#39;/usr/lib/jvm&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;mv ${java_folder} /usr/lib/jvm/&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span><span class="s1">&#39;install java&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s1">&#39;move jdk&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="n">logoutput</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;update-alternatives --install /bin/java java ${java_home}/bin/java 1&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span><span class="s1">&#39;set java&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s1">&#39;install java&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="n">logoutput</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;update-alternatives --set java ${java_home}/bin/java&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span><span class="s1">&#39;install javac&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s1">&#39;move jdk&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="n">logoutput</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;update-alternatives --install /bin/javac javac ${java_home}/bin/javac 1&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="p">{</span><span class="s1">&#39;set javac&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="nb">require</span> <span class="o">=&gt;</span> <span class="no">Exec</span><span class="o">[</span><span class="s1">&#39;install javac&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="n">logoutput</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=&gt;</span> <span class="s2">&quot;update-alternatives --set javac ${java_home}/bin/javac&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">file</span> <span class="p">{</span> <span class="s2">&quot;/etc/profile.d/java.sh&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=&gt;</span> <span class="s2">&quot;export JAVA_HOME=${java_home}</span>
</span><span class='line'><span class="s2">                  export PATH=\$PATH:\$JAVA_HOME/bin&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>5. Run and test new module.</h3>

<ul>
<li>Run:</li>
</ul>


<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant init</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Edit Vagrantfile, put following content:</li>
</ul>


<figure class='code'><figcaption><span>Vagrantfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Vagrant</span><span class="p">:</span><span class="ss">:Config</span><span class="o">.</span><span class="n">run</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:test_vm</span> <span class="k">do</span> <span class="o">|</span><span class="n">test_vm</span><span class="o">|</span>
</span><span class='line'>        <span class="n">test_vm</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;ubuntu&quot;</span>
</span><span class='line'>        <span class="n">test_vm</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:hostonly</span><span class="p">,</span> <span class="s2">&quot;10.71.71.10&quot;</span>
</span><span class='line'>        <span class="n">test_vm</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span> <span class="s2">&quot;modifyvm&quot;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;--memory&quot;</span><span class="p">,</span> <span class="s2">&quot;1024&quot;</span><span class="o">]</span>
</span><span class='line'>        <span class="n">test_vm</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:puppet</span> <span class="k">do</span> <span class="o">|</span><span class="n">puppet</span><span class="o">|</span>
</span><span class='line'>                <span class="n">puppet</span><span class="o">.</span><span class="n">module_path</span> <span class="o">=</span> <span class="s2">&quot;~/vagrant/manifests/&quot;</span>
</span><span class='line'>                <span class="n">puppet</span><span class="o">.</span><span class="n">module_path</span> <span class="o">=</span> <span class="s2">&quot;modules&quot;</span>
</span><span class='line'>                <span class="n">puppet</span><span class="o">.</span><span class="n">manifests_path</span> <span class="o">=</span> <span class="s2">&quot;manifests&quot;</span>
</span><span class='line'>                <span class="n">puppet</span><span class="o">.</span><span class="n">manifest_file</span>  <span class="o">=</span> <span class="s2">&quot;test_vm.pp&quot;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create <em>manifests</em> folder and <em>test_vm.pp</em>:</li>
</ul>


<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir manifests && touch manifests/test_vm.pp
</span><span class='line'>echo "include java" >> manifests/test_vm.pp</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Run VM</li>
</ul>


<figure class='code'><figcaption><span>Terminal Window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant up test_vm</span></code></pre></td></tr></table></div></figure>


<h3>6. Enjoy!</h3>

<p>PS. Thanks to my friend which pointed me to more nice and clear way of declaring variable in a class in a way it could be customized later with values different from defaults. I&rsquo;ve update the post and here you can see the customization example:</p>

<figure class='code'><figcaption><span>test_vm.pp</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="p">{</span> <span class="s2">&quot;java&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">java_archive</span> <span class="o">=&gt;</span> <span class="s2">&quot;jdk-8u01-linux-x64.tar.gz&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">java_home</span> <span class="o">=&gt;</span> <span class="s2">&quot;/usr/lib/jvm/jdk1.8.0_01/&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">java_folder</span> <span class="o">=&gt;</span> <span class="s2">&quot;jdk1.8.0_01&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup hadoop cluster]]></title>
    <link href="http://pensieve.info/blog/2013/09/21/setup-hadoop-cluster/"/>
    <updated>2013-09-21T01:10:00+03:00</updated>
    <id>http://pensieve.info/blog/2013/09/21/setup-hadoop-cluster</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;ve required to execute some heavy clustering computation on relatively big dataset. Since <a href="http://mahout.apache.org/">Mahout</a> (scalable machine learning framework) already has all required capabilities and holds implementation of base clustering algorithm, I&rsquo;ve decided to use it as a start point and because <a href="http://mahout.apache.org/">Mahout</a> is <a href="http://hadoop.apache.org/">Hadoop</a> based I&rsquo;ve had to setup cluster of <a href="http://hadoop.apache.org/">Hadoop</a> nodes to be able to execute my clustering task.</p>

<p>So here I&rsquo;ll try to memorize steps which required for distributed setup of hadoop cluster, for sake of simplicity I&rsquo;ll describe setup for only two nodes: master and slave. In this blog post I am going to describe manual install and configuration, while in the next I&rsquo;ll describe the automation configuration and install using <a href="http://puppetlabs.com/">puppet</a> and <a href="http://www.vagrantup.com/">vagrant</a> tools.  I will describe the installation process in context of Ubuntu 12.10 server, while I belive same steps will work for other distirbutives as well.</p>

<!-- more -->


<p>Here is the steps required for Hadoop install and configuration in order to be able to execute distributed tasks on cluster nodes:</p>

<ol>
<li><a href="#java_download_install">Java download and installation</a>.</li>
<li><a href="#hadoop_install">Download Hadoop and setup</a>.</li>
<li><a href="#ssh">Setup ssh configuration and configure public keys</a>.</li>
<li><a href="#hadoop_startup">Hadoop startup</a>.</li>
</ol>


<h3><a id="java_download_install">Java download and installation.</a></h3>

<p>Bellow steps has to be performed for each node in cluster in order to make sure each one has recent Oracle Java JDK installed.</p>

<ul>
<li>Download recent Java JDK for Linux distribution from Oracle official <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">site</a>. By the time writing this post recent tar gz was <em>jdk-7u40-linux-i586.tar.gz</em>.</li>
<li>Extract files from archive, run following command in terminal:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar xfv jdk-7u40-linux-i586.tar.gz</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Move extracted folder:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mv jdk1.7.0_40 /usr/lib/jvm/jdk1.7.0_40</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Update alternatives, install setup aliases for new Java jdk:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo update-alternatives --install /bin/java java /usr/lib/jvm/jdk1.7.0_40/bin/java 1
</span><span class='line'>sudo update-alternatives --install /bin/javac javac /usr/lib/jvm/jdk1.7.0_40/bin/javac 1</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Make installed aliases active:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo update-alternatives --set java /usr/lib/jvm/jdk1.7.0_40/bin/java
</span><span class='line'>sudo update-alternatives --set javac /usr/lib/jvm/jdk1.7.0_40/bin/javac</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure <strong>$JAVA_HOME</strong>:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo touch /etc/profile.d/java.sh
</span><span class='line'>sudo -c 'echo "export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_40/" >> /etc/profile.d/java.sh'
</span><span class='line'>sudo -c 'echo "export PATH=$PATH:$JAVA_HOME/bin" >> /etc/profile.d/java.sh'</span></code></pre></td></tr></table></div></figure>


<h3><a id="hadoop_install">Download Hadoop distribution</a></h3>

<ul>
<li>Download Hadoop from releases <a href="http://apache.spd.co.il/hadoop/common/">site</a>, choose last stable version.</li>
<li>Extract downloaded files into home folder:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar xfv hadoop-1.2.1.tar.gz</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure <strong>$HADOOP_HOME</strong>:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo touch /etc/profile.d/hadoop.sh
</span><span class='line'>sudo -c 'echo "export HADOOP_HOME=~/hadoop-1.2.0/" >> /etc/profile.d/hadoop.sh'
</span><span class='line'>sudo -c 'echo "export PATH=$PATH:$HADOOP_HOME/bin" >> /etc/profile.d/hadoop.sh'</span></code></pre></td></tr></table></div></figure>


<p>Now for next few steps assume we have two computer with IP addresses as follow: <strong>192.168.17.1</strong> (master) and <strong>192.168.17.2</strong> (slave).</p>

<ul>
<li>Open file $HADOOP_HOME/conf/core-site.xml and write content:</li>
</ul>


<figure class='code'><figcaption><span>core-site.xml</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>    <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>            <span class="nt">&lt;name&gt;</span>fs.default.name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>            <span class="nt">&lt;value&gt;</span>hdfs://192.168.17.1:9000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>            <span class="nt">&lt;description&gt;</span>The name of the default file system. A URI whose scheme and authority determine the FileSystem implementation.<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Next open $HADOOP_HOME/conf/hdfs-site.xml and write content:</li>
</ul>


<figure class='code'><figcaption><span>hdfs-site.xml</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;description&gt;</span>The actual number of replications can be specified when the file is created.<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Now open $HADOOP_HOME/conf/mapred-site.xml and write content:</li>
</ul>


<figure class='code'><figcaption><span>mapred-site.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.job.tracker<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>192.168.17.1:9001<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;description&gt;</span>The host and port that the MapReduce job tracker runs at.<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>And finally you need to change two more files first $HADOOP_HOME/conf/masters and second is $HADOOP_HOME/conf/slaves, not too hard to guess what should be contet of each one of these:</li>
</ul>


<figure class='code'><figcaption><span>masters </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.17.1</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span>slaves </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.17.1
</span><span class='line'>192.168.17.2</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve putted 192.168.17.1 in both files, since I&rsquo;d like to have master node to execute computational task as well and hold distributed data.</p>

<p>Now we proceed to the final steps of ssh configuration and actuall Hadoop startup.</p>

<h3><a id="ssh">Setup ssh configuration and configure public keys</a></h3>

<p>Configure master:</p>

<figure class='code'><figcaption><span>Generate public key for master node </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-key -t rsa</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Copy public key to slave node</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat ~/.ssh/id_rsa.pub | ssh 192.168.17.2 'cat >> .ssh/authorized_keys'</span></code></pre></td></tr></table></div></figure>


<p>Now same for slave:</p>

<figure class='code'><figcaption><span>Generate public key for slave node </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-key -t rsa</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Copy public key to master node</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat ~/.ssh/id_rsa.pub | ssh 192.168.17.1 'cat >> .ssh/authorized_keys'</span></code></pre></td></tr></table></div></figure>


<h3><a id="hadoop_startup">Hadoop startup</a></h3>

<p>Now after we have complete all configurations we need to run following commands in terminal on master (192.168.17.1) node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo ./hadoop namenode -format
</span><span class='line'>sudo ./start-all.sh</span></code></pre></td></tr></table></div></figure>


<p><a href="http://hadoop.apache.org/docs/stable/cluster_setup.html">Here</a> you can find more details and explanations on how to configure and setup Hadoop cluster.</p>

<p>Obviously it&rsquo;s ridiculous to proceed all these steps each time I need to setup new Hadoop cluster, so in my next blog post I&rsquo;ll write how-to setup Hadoop cluster using <a href="http://www.vagrantup.com/">vagrant</a> and <a href="http://puppetlabs.com/">puppet</a> to enable automation of this procedure.</p>
]]></content>
  </entry>
  
</feed>
